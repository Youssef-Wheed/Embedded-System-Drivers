

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jul 31 15:27:30 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 17/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   001486                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_registers
    64   001486  80                 	db	128
    65   001487  0F                 	db	15
    66   001488  81                 	db	129
    67   001489  0F                 	db	15
    68   00148A  82                 	db	130
    69   00148B  0F                 	db	15
    70   00148C  83                 	db	131
    71   00148D  0F                 	db	15
    72   00148E  84                 	db	132
    73   00148F  0F                 	db	15
    74                           
    75                           ;initializer for _lat_registers
    76   001490  89                 	db	137
    77   001491  0F                 	db	15
    78   001492  8A                 	db	138
    79   001493  0F                 	db	15
    80   001494  8B                 	db	139
    81   001495  0F                 	db	15
    82   001496  8C                 	db	140
    83   001497  0F                 	db	15
    84   001498  8D                 	db	141
    85   001499  0F                 	db	15
    86                           
    87                           ;initializer for _tris_registers
    88   00149A  92                 	db	146
    89   00149B  0F                 	db	15
    90   00149C  93                 	db	147
    91   00149D  0F                 	db	15
    92   00149E  94                 	db	148
    93   00149F  0F                 	db	15
    94   0014A0  95                 	db	149
    95   0014A1  0F                 	db	15
    96   0014A2  96                 	db	150
    97   0014A3  0F                 	db	15
    98                           
    99                           ;initializer for _dc_motor_2
   100   0014A4  12                 	db	18
   101   0014A5  1A                 	db	26
   102                           
   103                           ;initializer for _dc_motor_1
   104   0014A6  02                 	db	2
   105   0014A7  0A                 	db	10
   106   000000                     _PORTE	set	3972
   107   000000                     _PORTD	set	3971
   108   000000                     _PORTC	set	3970
   109   000000                     _PORTB	set	3969
   110   000000                     _PORTA	set	3968
   111   000000                     _LATA	set	3977
   112   000000                     _TRISA	set	3986
   113   000000                     _TRISE	set	3990
   114   000000                     _TRISD	set	3989
   115   000000                     _TRISC	set	3988
   116   000000                     _TRISB	set	3987
   117   000000                     _LATE	set	3981
   118   000000                     _LATD	set	3980
   119   000000                     _LATC	set	3979
   120   000000                     _LATB	set	3978
   121                           
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125   001420                     __pcinit:
   126                           	callstack 0
   127   001420                     start_initialization:
   128                           	callstack 0
   129   001420                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (34 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134   001420  0E86               	movlw	low __pidataCOMRAM
   135   001422  6EF6               	movwf	tblptrl,c
   136   001424  0E14               	movlw	high __pidataCOMRAM
   137   001426  6EF7               	movwf	tblptrh,c
   138   001428  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139   00142A  6EF8               	movwf	tblptru,c
   140   00142C  EE00  F001         	lfsr	0,__pdataCOMRAM
   141   001430  EE10 F022          	lfsr	1,34
   142   001434                     copy_data0:
   143   001434  0009               	tblrd		*+
   144   001436  CFF5 FFEE          	movff	tablat,postinc0
   145   00143A  50E5               	movf	postdec1,w,c
   146   00143C  50E1               	movf	fsr1l,w,c
   147   00143E  E1FA               	bnz	copy_data0
   148                           
   149                           ; Clear objects allocated to COMRAM (7 bytes)
   150   001440  EE00  F032         	lfsr	0,__pbssCOMRAM
   151   001444  0E07               	movlw	7
   152   001446                     clear_0:
   153   001446  6AEE               	clrf	postinc0,c
   154   001448  06E8               	decf	wreg,f,c
   155   00144A  E1FD               	bnz	clear_0
   156   00144C                     end_of_initialization:
   157                           	callstack 0
   158   00144C                     __end_of__initialization:
   159                           	callstack 0
   160   00144C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   161   00144E  6EF8               	movwf	tblptru,c
   162   001450  0100               	movlb	0
   163   001452  EF12  F009         	goto	_main	;jump to C main() function
   164                           
   165                           	psect	bssCOMRAM
   166   000032                     __pbssCOMRAM:
   167                           	callstack 0
   168   000032                     relay_trun_off@F2898:
   169                           	callstack 0
   170   000032                     	ds	1
   171   000033                     relay_trun_on@F2893:
   172                           	callstack 0
   173   000033                     	ds	1
   174   000034                     relay_initialize@F2888:
   175                           	callstack 0
   176   000034                     	ds	1
   177   000035                     led_turn_toggle@F2909:
   178                           	callstack 0
   179   000035                     	ds	1
   180   000036                     led_turn_off@F2904:
   181                           	callstack 0
   182   000036                     	ds	1
   183   000037                     led_turn_on@F2899:
   184                           	callstack 0
   185   000037                     	ds	1
   186   000038                     led_initialize@F2894:
   187                           	callstack 0
   188   000038                     	ds	1
   189                           
   190                           	psect	dataCOMRAM
   191   000001                     __pdataCOMRAM:
   192                           	callstack 0
   193   000001                     _port_registers:
   194                           	callstack 0
   195   000001                     	ds	10
   196   00000B                     _lat_registers:
   197                           	callstack 0
   198   00000B                     	ds	10
   199   000015                     _tris_registers:
   200                           	callstack 0
   201   000015                     	ds	10
   202   00001F                     _dc_motor_2:
   203                           	callstack 0
   204   00001F                     	ds	2
   205   000021                     _dc_motor_1:
   206                           	callstack 0
   207   000021                     	ds	2
   208                           
   209                           	psect	cstackCOMRAM
   210   000023                     __pcstackCOMRAM:
   211                           	callstack 0
   212   000023                     gpio_pin_direction_intialize@_pin_config:
   213                           	callstack 0
   214   000023                     gpio_pin_write_logic@_pin_config:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x0
   218   000023                     	ds	1
   219   000024                     ??_gpio_pin_direction_intialize:
   220   000024                     gpio_pin_write_logic@logic:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x1
   224   000024                     	ds	1
   225   000025                     ??_gpio_pin_write_logic:
   226                           
   227                           ; 1 bytes @ 0x2
   228   000025                     	ds	4
   229   000029                     gpio_pin_direction_intialize@ret:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x6
   233   000029                     	ds	1
   234   00002A                     gpio_pin_write_logic@ret:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x7
   238   00002A                     	ds	1
   239   00002B                     gpio_pin_intialize@_pin_config:
   240                           	callstack 0
   241   00002B                     dc_motor_move_right@_dc_motor:
   242                           	callstack 0
   243   00002B                     dc_motor_move_left@_dc_motor:
   244                           	callstack 0
   245   00002B                     dc_motor_move_stop@_dc_motor:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x8
   249   00002B                     	ds	1
   250   00002C                     ??_gpio_pin_intialize:
   251   00002C                     dc_motor_move_right@ret:
   252                           	callstack 0
   253   00002C                     dc_motor_move_left@ret:
   254                           	callstack 0
   255   00002C                     dc_motor_move_stop@ret:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x9
   259   00002C                     	ds	1
   260   00002D                     gpio_pin_intialize@ret:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0xA
   264   00002D                     	ds	1
   265   00002E                     dc_motor_initialize@_dc_motor:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0xB
   269   00002E                     	ds	1
   270   00002F                     dc_motor_initialize@ret:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0xC
   274   00002F                     	ds	1
   275   000030                     ??_main:
   276                           
   277                           ; 1 bytes @ 0xD
   278   000030                     	ds	2
   279                           
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 42 in file "application.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  ret             1    0        unsigned char 
   290 ;; Return value:  Size  Location     Type
   291 ;;                  2  216[None  ] int 
   292 ;; Registers used:
   293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;Total ram usage:        2 bytes
   304 ;; Hardware stack levels required when called: 4
   305 ;; This function calls:
   306 ;;		_application_intialize
   307 ;;		_dc_motor_move_left
   308 ;;		_dc_motor_move_right
   309 ;;		_dc_motor_move_stop
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text0
   316   001224                     __ptext0:
   317                           	callstack 0
   318   001224                     _main:
   319                           	callstack 27
   320   001224                     
   321                           ;application.c: 44:     application_intialize();
   322   001224  EC54  F00A         	call	_application_intialize	;wreg free
   323   001228                     l1513:
   324   001228  0E21               	movlw	low _dc_motor_1
   325   00122A  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   326   00122C  ECD8  F009         	call	_dc_motor_move_right	;wreg free
   327   001230  0E1F               	movlw	low _dc_motor_2
   328   001232  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   329   001234  ECD8  F009         	call	_dc_motor_move_right	;wreg free
   330   001238                     
   331                           ;application.c: 49:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   332   001238  0E1F               	movlw	31
   333   00123A  6E31               	movwf	(??_main+1)^0,c
   334   00123C  0E71               	movlw	113
   335   00123E  6E30               	movwf	??_main^0,c
   336   001240  0E1E               	movlw	30
   337   001242                     u837:
   338   001242  2EE8               	decfsz	wreg,f,c
   339   001244  D7FE               	bra	u837
   340   001246  2E30               	decfsz	??_main^0,f,c
   341   001248  D7FC               	bra	u837
   342   00124A  2E31               	decfsz	(??_main+1)^0,f,c
   343   00124C  D7FA               	bra	u837
   344   00124E  D000               	nop2	
   345   001250  0E21               	movlw	low _dc_motor_1
   346   001252  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   347   001254  ECF4  F009         	call	_dc_motor_move_left	;wreg free
   348   001258  0E1F               	movlw	low _dc_motor_2
   349   00125A  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   350   00125C  ECF4  F009         	call	_dc_motor_move_left	;wreg free
   351   001260                     
   352                           ;application.c: 52:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   353   001260  0E1F               	movlw	31
   354   001262  6E31               	movwf	(??_main+1)^0,c
   355   001264  0E71               	movlw	113
   356   001266  6E30               	movwf	??_main^0,c
   357   001268  0E1E               	movlw	30
   358   00126A                     u847:
   359   00126A  2EE8               	decfsz	wreg,f,c
   360   00126C  D7FE               	bra	u847
   361   00126E  2E30               	decfsz	??_main^0,f,c
   362   001270  D7FC               	bra	u847
   363   001272  2E31               	decfsz	(??_main+1)^0,f,c
   364   001274  D7FA               	bra	u847
   365   001276  D000               	nop2	
   366   001278  0E21               	movlw	low _dc_motor_1
   367   00127A  6E2B               	movwf	dc_motor_move_stop@_dc_motor^0,c
   368   00127C  ECBC  F009         	call	_dc_motor_move_stop	;wreg free
   369   001280  0E1F               	movlw	low _dc_motor_2
   370   001282  6E2B               	movwf	dc_motor_move_stop@_dc_motor^0,c
   371   001284  ECBC  F009         	call	_dc_motor_move_stop	;wreg free
   372   001288                     
   373                           ;application.c: 55:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   374   001288  0E1F               	movlw	31
   375   00128A  6E31               	movwf	(??_main+1)^0,c
   376   00128C  0E71               	movlw	113
   377   00128E  6E30               	movwf	??_main^0,c
   378   001290  0E1E               	movlw	30
   379   001292                     u857:
   380   001292  2EE8               	decfsz	wreg,f,c
   381   001294  D7FE               	bra	u857
   382   001296  2E30               	decfsz	??_main^0,f,c
   383   001298  D7FC               	bra	u857
   384   00129A  2E31               	decfsz	(??_main+1)^0,f,c
   385   00129C  D7FA               	bra	u857
   386   00129E  D000               	nop2	
   387   0012A0  0E21               	movlw	low _dc_motor_1
   388   0012A2  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   389   0012A4  ECD8  F009         	call	_dc_motor_move_right	;wreg free
   390   0012A8  0E1F               	movlw	low _dc_motor_2
   391   0012AA  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   392   0012AC  ECF4  F009         	call	_dc_motor_move_left	;wreg free
   393   0012B0                     
   394                           ;application.c: 58:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   395   0012B0  0E1F               	movlw	31
   396   0012B2  6E31               	movwf	(??_main+1)^0,c
   397   0012B4  0E71               	movlw	113
   398   0012B6  6E30               	movwf	??_main^0,c
   399   0012B8  0E1E               	movlw	30
   400   0012BA                     u867:
   401   0012BA  2EE8               	decfsz	wreg,f,c
   402   0012BC  D7FE               	bra	u867
   403   0012BE  2E30               	decfsz	??_main^0,f,c
   404   0012C0  D7FC               	bra	u867
   405   0012C2  2E31               	decfsz	(??_main+1)^0,f,c
   406   0012C4  D7FA               	bra	u867
   407   0012C6  D000               	nop2	
   408   0012C8  0E21               	movlw	low _dc_motor_1
   409   0012CA  6E2B               	movwf	dc_motor_move_stop@_dc_motor^0,c
   410   0012CC  ECBC  F009         	call	_dc_motor_move_stop	;wreg free
   411   0012D0  0E1F               	movlw	low _dc_motor_2
   412   0012D2  6E2B               	movwf	dc_motor_move_stop@_dc_motor^0,c
   413   0012D4  ECBC  F009         	call	_dc_motor_move_stop	;wreg free
   414   0012D8                     
   415                           ;application.c: 61:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   416   0012D8  0E1F               	movlw	31
   417   0012DA  6E31               	movwf	(??_main+1)^0,c
   418   0012DC  0E71               	movlw	113
   419   0012DE  6E30               	movwf	??_main^0,c
   420   0012E0  0E1E               	movlw	30
   421   0012E2                     u877:
   422   0012E2  2EE8               	decfsz	wreg,f,c
   423   0012E4  D7FE               	bra	u877
   424   0012E6  2E30               	decfsz	??_main^0,f,c
   425   0012E8  D7FC               	bra	u877
   426   0012EA  2E31               	decfsz	(??_main+1)^0,f,c
   427   0012EC  D7FA               	bra	u877
   428   0012EE  D000               	nop2	
   429   0012F0  0E1F               	movlw	low _dc_motor_2
   430   0012F2  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   431   0012F4  ECD8  F009         	call	_dc_motor_move_right	;wreg free
   432   0012F8  0E21               	movlw	low _dc_motor_1
   433   0012FA  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   434   0012FC  ECF4  F009         	call	_dc_motor_move_left	;wreg free
   435   001300                     
   436                           ;application.c: 64:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   437   001300  0E1F               	movlw	31
   438   001302  6E31               	movwf	(??_main+1)^0,c
   439   001304  0E71               	movlw	113
   440   001306  6E30               	movwf	??_main^0,c
   441   001308  0E1E               	movlw	30
   442   00130A                     u887:
   443   00130A  2EE8               	decfsz	wreg,f,c
   444   00130C  D7FE               	bra	u887
   445   00130E  2E30               	decfsz	??_main^0,f,c
   446   001310  D7FC               	bra	u887
   447   001312  2E31               	decfsz	(??_main+1)^0,f,c
   448   001314  D7FA               	bra	u887
   449   001316  D000               	nop2	
   450   001318  EF14  F009         	goto	l1513
   451   00131C  EF00  F000         	goto	start
   452   001320                     __end_of_main:
   453                           	callstack 0
   454                           
   455 ;; *************** function _dc_motor_move_stop *****************
   456 ;; Defined at:
   457 ;;		line 62 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   460 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  ret             1    9[COMRAM] unsigned char 
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      unsigned char 
   465 ;; Registers used:
   466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;Total ram usage:        2 bytes
   477 ;; Hardware stack levels used: 1
   478 ;; Hardware stack levels required when called: 1
   479 ;; This function calls:
   480 ;;		_gpio_pin_write_logic
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text1
   487   001378                     __ptext1:
   488                           	callstack 0
   489   001378                     _dc_motor_move_stop:
   490                           	callstack 29
   491   001378                     
   492                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 63:     Std_ReturnType ret = (Std_ReturnType)0x01;
   493   001378  0E01               	movlw	1
   494   00137A  6E2C               	movwf	dc_motor_move_stop@ret^0,c
   495                           
   496                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 64:     if (((void*)0) == _dc_motor) {
   497   00137C  502B               	movf	dc_motor_move_stop@_dc_motor^0,w,c
   498   00137E  A4D8               	btfss	status,2,c
   499   001380  EFC4  F009         	goto	u691
   500   001384  EFC6  F009         	goto	u690
   501   001388                     u691:
   502   001388  EFCA  F009         	goto	l1397
   503   00138C                     u690:
   504   00138C                     
   505                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 65:         ret = (Std_ReturnType)0x00;
   506   00138C  0E00               	movlw	0
   507   00138E  6E2C               	movwf	dc_motor_move_stop@ret^0,c
   508                           
   509                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 66:     } else {
   510   001390  EFD6  F009         	goto	l1399
   511   001394                     l1397:
   512                           
   513                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 67:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0]), GPIO_LOW);
   514   001394  C02B  F023         	movff	dc_motor_move_stop@_dc_motor,gpio_pin_write_logic@_pin_config
   515   001398  0E00               	movlw	0
   516   00139A  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   517   00139C  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   518                           
   519                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 68:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0]), GPIO_LOW);
   520   0013A0  C02B  F023         	movff	dc_motor_move_stop@_dc_motor,gpio_pin_write_logic@_pin_config
   521   0013A4  0E00               	movlw	0
   522   0013A6  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   523   0013A8  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   524   0013AC                     l1399:
   525                           
   526                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 70:     return ret;
   527   0013AC  502C               	movf	dc_motor_move_stop@ret^0,w,c
   528   0013AE  0012               	return		;funcret
   529   0013B0                     __end_of_dc_motor_move_stop:
   530                           	callstack 0
   531                           
   532 ;; *************** function _dc_motor_move_right *****************
   533 ;; Defined at:
   534 ;;		line 30 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   537 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  ret             1    9[COMRAM] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      unsigned char 
   542 ;; Registers used:
   543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   549 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;Total ram usage:        2 bytes
   554 ;; Hardware stack levels used: 1
   555 ;; Hardware stack levels required when called: 1
   556 ;; This function calls:
   557 ;;		_gpio_pin_write_logic
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text2
   564   0013B0                     __ptext2:
   565                           	callstack 0
   566   0013B0                     _dc_motor_move_right:
   567                           	callstack 29
   568   0013B0                     
   569                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 31:     Std_ReturnType ret = (Std_ReturnType)0x01;
   570   0013B0  0E01               	movlw	1
   571   0013B2  6E2C               	movwf	dc_motor_move_right@ret^0,c
   572                           
   573                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 32:     if (((void*)0) == _dc_motor) {
   574   0013B4  502B               	movf	dc_motor_move_right@_dc_motor^0,w,c
   575   0013B6  A4D8               	btfss	status,2,c
   576   0013B8  EFE0  F009         	goto	u671
   577   0013BC  EFE2  F009         	goto	u670
   578   0013C0                     u671:
   579   0013C0  EFE6  F009         	goto	l1377
   580   0013C4                     u670:
   581   0013C4                     
   582                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 33:         ret = (Std_ReturnType)0x00;
   583   0013C4  0E00               	movlw	0
   584   0013C6  6E2C               	movwf	dc_motor_move_right@ret^0,c
   585                           
   586                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 34:     } else {
   587   0013C8  EFF2  F009         	goto	l1379
   588   0013CC                     l1377:
   589                           
   590                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 35:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0]), GPIO_HIGH);
   591   0013CC  C02B  F023         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
   592   0013D0  0E01               	movlw	1
   593   0013D2  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   594   0013D4  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   595                           
   596                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 36:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[1]), GPIO_LOW);
   597   0013D8  282B               	incf	dc_motor_move_right@_dc_motor^0,w,c
   598   0013DA  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   599   0013DC  0E00               	movlw	0
   600   0013DE  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   601   0013E0  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   602   0013E4                     l1379:
   603                           
   604                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 38:     return ret;
   605   0013E4  502C               	movf	dc_motor_move_right@ret^0,w,c
   606   0013E6  0012               	return		;funcret
   607   0013E8                     __end_of_dc_motor_move_right:
   608                           	callstack 0
   609                           
   610 ;; *************** function _dc_motor_move_left *****************
   611 ;; Defined at:
   612 ;;		line 46 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   615 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  ret             1    9[COMRAM] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      unsigned char 
   620 ;; Registers used:
   621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   627 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 1
   634 ;; This function calls:
   635 ;;		_gpio_pin_write_logic
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text3
   642   0013E8                     __ptext3:
   643                           	callstack 0
   644   0013E8                     _dc_motor_move_left:
   645                           	callstack 29
   646   0013E8                     
   647                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 47:     Std_ReturnType ret = (Std_ReturnType)0x01;
   648   0013E8  0E01               	movlw	1
   649   0013EA  6E2C               	movwf	dc_motor_move_left@ret^0,c
   650                           
   651                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 48:     if (((void*)0) == _dc_motor) {
   652   0013EC  502B               	movf	dc_motor_move_left@_dc_motor^0,w,c
   653   0013EE  A4D8               	btfss	status,2,c
   654   0013F0  EFFC  F009         	goto	u681
   655   0013F4  EFFE  F009         	goto	u680
   656   0013F8                     u681:
   657   0013F8  EF02  F00A         	goto	l1387
   658   0013FC                     u680:
   659   0013FC                     
   660                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 49:         ret = (Std_ReturnType)0x00;
   661   0013FC  0E00               	movlw	0
   662   0013FE  6E2C               	movwf	dc_motor_move_left@ret^0,c
   663                           
   664                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 50:     } else {
   665   001400  EF0E  F00A         	goto	l1389
   666   001404                     l1387:
   667                           
   668                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 51:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0]), GPIO_LOW);
   669   001404  C02B  F023         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@_pin_config
   670   001408  0E00               	movlw	0
   671   00140A  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   672   00140C  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   673                           
   674                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 52:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[1]), GPIO_HIGH);
   675   001410  282B               	incf	dc_motor_move_left@_dc_motor^0,w,c
   676   001412  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   677   001414  0E01               	movlw	1
   678   001416  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   679   001418  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   680   00141C                     l1389:
   681                           
   682                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 54:     return ret;
   683   00141C  502C               	movf	dc_motor_move_left@ret^0,w,c
   684   00141E  0012               	return		;funcret
   685   001420                     __end_of_dc_motor_move_left:
   686                           	callstack 0
   687                           
   688 ;; *************** function _application_intialize *****************
   689 ;; Defined at:
   690 ;;		line 69 in file "application.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  ret             1    0        unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 3
   711 ;; This function calls:
   712 ;;		_dc_motor_initialize
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text4
   719   0014A8                     __ptext4:
   720                           	callstack 0
   721   0014A8                     _application_intialize:
   722                           	callstack 27
   723   0014A8  0E21               	movlw	low _dc_motor_1
   724   0014AA  6E2E               	movwf	dc_motor_initialize@_dc_motor^0,c
   725   0014AC  EC2B  F00A         	call	_dc_motor_initialize	;wreg free
   726   0014B0  0E1F               	movlw	low _dc_motor_2
   727   0014B2  6E2E               	movwf	dc_motor_initialize@_dc_motor^0,c
   728   0014B4  EC2B  F00A         	call	_dc_motor_initialize	;wreg free
   729   0014B8  0012               	return		;funcret
   730   0014BA                     __end_of_application_intialize:
   731                           	callstack 0
   732                           
   733 ;; *************** function _dc_motor_initialize *****************
   734 ;; Defined at:
   735 ;;		line 14 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  _dc_motor       1   11[COMRAM] PTR const struct .
   738 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  ret             1   12[COMRAM] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      unsigned char 
   743 ;; Registers used:
   744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   750 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;Total ram usage:        2 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 2
   757 ;; This function calls:
   758 ;;		_gpio_pin_intialize
   759 ;; This function is called by:
   760 ;;		_application_intialize
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text5
   765   001456                     __ptext5:
   766                           	callstack 0
   767   001456                     _dc_motor_initialize:
   768                           	callstack 27
   769   001456                     
   770                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 15:     Std_ReturnType ret = (Std_ReturnType)0x01;
   771   001456  0E01               	movlw	1
   772   001458  6E2F               	movwf	dc_motor_initialize@ret^0,c
   773                           
   774                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 16:     if (((void*)0) == _dc_motor) {
   775   00145A  502E               	movf	dc_motor_initialize@_dc_motor^0,w,c
   776   00145C  A4D8               	btfss	status,2,c
   777   00145E  EF33  F00A         	goto	u661
   778   001462  EF35  F00A         	goto	u660
   779   001466                     u661:
   780   001466  EF39  F00A         	goto	l1361
   781   00146A                     u660:
   782   00146A                     
   783                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 17:         ret = (Std_ReturnType)0x00;
   784   00146A  0E00               	movlw	0
   785   00146C  6E2F               	movwf	dc_motor_initialize@ret^0,c
   786                           
   787                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 18:     } else {
   788   00146E  EF41  F00A         	goto	l1363
   789   001472                     l1361:
   790                           
   791                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[0]));
   792   001472  C02E  F02B         	movff	dc_motor_initialize@_dc_motor,gpio_pin_intialize@_pin_config
   793   001476  EC90  F009         	call	_gpio_pin_intialize	;wreg free
   794                           
   795                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          _pin[1]));
   796   00147A  282E               	incf	dc_motor_initialize@_dc_motor^0,w,c
   797   00147C  6E2B               	movwf	gpio_pin_intialize@_pin_config^0,c
   798   00147E  EC90  F009         	call	_gpio_pin_intialize	;wreg free
   799   001482                     l1363:
   800                           
   801                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:     return ret;
   802   001482  502F               	movf	dc_motor_initialize@ret^0,w,c
   803   001484  0012               	return		;funcret
   804   001486                     __end_of_dc_motor_initialize:
   805                           	callstack 0
   806                           
   807 ;; *************** function _gpio_pin_intialize *****************
   808 ;; Defined at:
   809 ;;		line 144 in file "MCAL_Layer/GPIO/hal_gpio.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   812 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
   813 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  ret             1   10[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      unsigned char 
   818 ;; Registers used:
   819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   825 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;Total ram usage:        3 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 1
   832 ;; This function calls:
   833 ;;		_gpio_pin_direction_intialize
   834 ;;		_gpio_pin_write_logic
   835 ;; This function is called by:
   836 ;;		_dc_motor_initialize
   837 ;;		_led_initialize
   838 ;;		_relay_initialize
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text6
   843   001320                     __ptext6:
   844                           	callstack 0
   845   001320                     _gpio_pin_intialize:
   846                           	callstack 27
   847   001320                     
   848                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
   849   001320  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   850   001322  B4D8               	btfsc	status,2,c
   851   001324  EF96  F009         	goto	u641
   852   001328  EF98  F009         	goto	u640
   853   00132C                     u641:
   854   00132C  EFA8  F009         	goto	l1351
   855   001330                     u640:
   856   001330  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   857   001332  6ED9               	movwf	fsr2l,c
   858   001334  6ADA               	clrf	fsr2h,c
   859   001336  30DF               	rrcf	223,w,c
   860   001338  32E8               	rrcf	wreg,f,c
   861   00133A  32E8               	rrcf	wreg,f,c
   862   00133C  0B07               	andlw	7
   863   00133E  6E2C               	movwf	??_gpio_pin_intialize^0,c
   864   001340  0E07               	movlw	7
   865   001342  642C               	cpfsgt	??_gpio_pin_intialize^0,c
   866   001344  EFA6  F009         	goto	u651
   867   001348  EFA8  F009         	goto	u650
   868   00134C                     u651:
   869   00134C  EFAA  F009         	goto	l1353
   870   001350                     u650:
   871   001350                     l1351:
   872                           
   873                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     }
   874   001350  EFBB  F009         	goto	l171
   875   001354                     l1353:
   876                           
   877                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
   878   001354  C02B  F023         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
   879   001358  EC01  F008         	call	_gpio_pin_direction_intialize	;wreg free
   880   00135C  6E2D               	movwf	gpio_pin_intialize@ret^0,c
   881                           
   882                           ;MCAL_Layer/GPIO/hal_gpio.c: 151:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
   883   00135E  C02B  F023         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
   884   001362  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   885   001364  6ED9               	movwf	fsr2l,c
   886   001366  6ADA               	clrf	fsr2h,c
   887   001368  0E00               	movlw	0
   888   00136A  BEDF               	btfsc	indf2,7,c
   889   00136C  0E01               	movlw	1
   890   00136E  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   891   001370  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   892   001374  6E2D               	movwf	gpio_pin_intialize@ret^0,c
   893   001376                     l171:
   894   001376  0012               	return		;funcret
   895   001378                     __end_of_gpio_pin_intialize:
   896                           	callstack 0
   897                           
   898 ;; *************** function _gpio_pin_write_logic *****************
   899 ;; Defined at:
   900 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   903 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
   904 ;;		 -> relay_trun_off@pin_obj(1), relay_trun_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
   905 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
   906 ;;  logic           1    1[COMRAM] enum E2814
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  ret             1    7[COMRAM] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      unsigned char 
   911 ;; Registers used:
   912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        8 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_gpio_pin_intialize
   928 ;;		_dc_motor_move_right
   929 ;;		_dc_motor_move_left
   930 ;;		_dc_motor_move_stop
   931 ;;		_led_turn_on
   932 ;;		_led_turn_off
   933 ;;		_relay_trun_on
   934 ;;		_relay_trun_off
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text7
   939   001114                     __ptext7:
   940                           	callstack 0
   941   001114                     _gpio_pin_write_logic:
   942                           	callstack 29
   943   001114                     
   944                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
   945   001114  0E01               	movlw	1
   946   001116  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
   947                           
   948                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
   949   001118  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   950   00111A  B4D8               	btfsc	status,2,c
   951   00111C  EF92  F008         	goto	u601
   952   001120  EF94  F008         	goto	u600
   953   001124                     u601:
   954   001124  EFA4  F008         	goto	l1329
   955   001128                     u600:
   956   001128  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   957   00112A  6ED9               	movwf	fsr2l,c
   958   00112C  6ADA               	clrf	fsr2h,c
   959   00112E  30DF               	rrcf	223,w,c
   960   001130  32E8               	rrcf	wreg,f,c
   961   001132  32E8               	rrcf	wreg,f,c
   962   001134  0B07               	andlw	7
   963   001136  6E25               	movwf	??_gpio_pin_write_logic^0,c
   964   001138  0E07               	movlw	7
   965   00113A  6425               	cpfsgt	??_gpio_pin_write_logic^0,c
   966   00113C  EFA2  F008         	goto	u611
   967   001140  EFA4  F008         	goto	u610
   968   001144                     u611:
   969   001144  EFFB  F008         	goto	l1337
   970   001148                     u610:
   971   001148                     l1329:
   972                           
   973                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
   974   001148  0E00               	movlw	0
   975   00114A  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
   976                           
   977                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
   978   00114C  EF10  F009         	goto	l1339
   979   001150                     l1331:
   980                           
   981                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
   982   001150  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   983   001152  6ED9               	movwf	fsr2l,c
   984   001154  6ADA               	clrf	fsr2h,c
   985   001156  30DF               	rrcf	223,w,c
   986   001158  32E8               	rrcf	wreg,f,c
   987   00115A  32E8               	rrcf	wreg,f,c
   988   00115C  0B07               	andlw	7
   989   00115E  6E25               	movwf	??_gpio_pin_write_logic^0,c
   990   001160  0E01               	movlw	1
   991   001162  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
   992   001164  2A25               	incf	??_gpio_pin_write_logic^0,f,c
   993   001166  EFB7  F008         	goto	u624
   994   00116A                     u625:
   995   00116A  90D8               	bcf	status,0,c
   996   00116C  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   997   00116E                     u624:
   998   00116E  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
   999   001170  EFB5  F008         	goto	u625
  1000   001174  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1001   001176  0AFF               	xorlw	255
  1002   001178  6E27               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1003   00117A  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1004   00117C  6ED9               	movwf	fsr2l,c
  1005   00117E  6ADA               	clrf	fsr2h,c
  1006   001180  50DF               	movf	223,w,c
  1007   001182  0B07               	andlw	7
  1008   001184  0D02               	mullw	2
  1009   001186  50F3               	movf	243,w,c
  1010   001188  0F0B               	addlw	low _lat_registers
  1011   00118A  6ED9               	movwf	fsr2l,c
  1012   00118C  6ADA               	clrf	fsr2h,c
  1013   00118E  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+3
  1014   001192  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+4
  1015   001196  C028  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1016   00119A  C029  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1017   00119E  5027               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1018   0011A0  16DF               	andwf	indf2,f,c
  1019                           
  1020                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  1021   0011A2  EF10  F009         	goto	l1339
  1022   0011A6                     l1333:
  1023                           
  1024                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  1025   0011A6  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1026   0011A8  6ED9               	movwf	fsr2l,c
  1027   0011AA  6ADA               	clrf	fsr2h,c
  1028   0011AC  30DF               	rrcf	223,w,c
  1029   0011AE  32E8               	rrcf	wreg,f,c
  1030   0011B0  32E8               	rrcf	wreg,f,c
  1031   0011B2  0B07               	andlw	7
  1032   0011B4  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1033   0011B6  0E01               	movlw	1
  1034   0011B8  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1035   0011BA  2A25               	incf	??_gpio_pin_write_logic^0,f,c
  1036   0011BC  EFE2  F008         	goto	u634
  1037   0011C0                     u635:
  1038   0011C0  90D8               	bcf	status,0,c
  1039   0011C2  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1040   0011C4                     u634:
  1041   0011C4  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
  1042   0011C6  EFE0  F008         	goto	u635
  1043   0011CA  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1044   0011CC  6ED9               	movwf	fsr2l,c
  1045   0011CE  6ADA               	clrf	fsr2h,c
  1046   0011D0  50DF               	movf	223,w,c
  1047   0011D2  0B07               	andlw	7
  1048   0011D4  0D02               	mullw	2
  1049   0011D6  50F3               	movf	243,w,c
  1050   0011D8  0F0B               	addlw	low _lat_registers
  1051   0011DA  6ED9               	movwf	fsr2l,c
  1052   0011DC  6ADA               	clrf	fsr2h,c
  1053   0011DE  CFDE F027          	movff	postinc2,??_gpio_pin_write_logic+2
  1054   0011E2  CFDD F028          	movff	postdec2,??_gpio_pin_write_logic+3
  1055   0011E6  C027  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1056   0011EA  C028  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1057   0011EE  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1058   0011F0  12DF               	iorwf	indf2,f,c
  1059                           
  1060                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  1061   0011F2  EF10  F009         	goto	l1339
  1062   0011F6                     l1337:
  1063   0011F6  5024               	movf	gpio_pin_write_logic@logic^0,w,c
  1064   0011F8  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1065   0011FA  6A26               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1066                           
  1067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1068                           ; Switch size 1, requested type "simple"
  1069                           ; Number of cases is 1, Range of values is 0 to 0
  1070                           ; switch strategies available:
  1071                           ; Name         Instructions Cycles
  1072                           ; simple_byte            4     3 (average)
  1073                           ;	Chosen strategy is simple_byte
  1074   0011FC  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1075   0011FE  0A00               	xorlw	0	; case 0
  1076   001200  B4D8               	btfsc	status,2,c
  1077   001202  EF05  F009         	goto	l1553
  1078   001206  EFA4  F008         	goto	l1329
  1079   00120A                     l1553:
  1080                           
  1081                           ; Switch size 1, requested type "simple"
  1082                           ; Number of cases is 2, Range of values is 0 to 1
  1083                           ; switch strategies available:
  1084                           ; Name         Instructions Cycles
  1085                           ; simple_byte            7     4 (average)
  1086                           ;	Chosen strategy is simple_byte
  1087   00120A  5025               	movf	??_gpio_pin_write_logic^0,w,c
  1088   00120C  0A00               	xorlw	0	; case 0
  1089   00120E  B4D8               	btfsc	status,2,c
  1090   001210  EFA8  F008         	goto	l1331
  1091   001214  0A01               	xorlw	1	; case 1
  1092   001216  B4D8               	btfsc	status,2,c
  1093   001218  EFD3  F008         	goto	l1333
  1094   00121C  EFA4  F008         	goto	l1329
  1095   001220                     l1339:
  1096                           
  1097                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     return ret;
  1098   001220  502A               	movf	gpio_pin_write_logic@ret^0,w,c
  1099   001222  0012               	return		;funcret
  1100   001224                     __end_of_gpio_pin_write_logic:
  1101                           	callstack 0
  1102                           
  1103 ;; *************** function _gpio_pin_direction_intialize *****************
  1104 ;; Defined at:
  1105 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1108 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
  1109 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  ret             1    6[COMRAM] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      unsigned char 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1121 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;Total ram usage:        7 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_gpio_pin_intialize
  1131 ;;		_button_initialize
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text8
  1136   001002                     __ptext8:
  1137                           	callstack 0
  1138   001002                     _gpio_pin_direction_intialize:
  1139                           	callstack 27
  1140   001002                     
  1141                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1142   001002  0E01               	movlw	1
  1143   001004  6E29               	movwf	gpio_pin_direction_intialize@ret^0,c
  1144                           
  1145                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1146   001006  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1147   001008  B4D8               	btfsc	status,2,c
  1148   00100A  EF09  F008         	goto	u551
  1149   00100E  EF0B  F008         	goto	u550
  1150   001012                     u551:
  1151   001012  EF1B  F008         	goto	l1311
  1152   001016                     u550:
  1153   001016  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1154   001018  6ED9               	movwf	fsr2l,c
  1155   00101A  6ADA               	clrf	fsr2h,c
  1156   00101C  30DF               	rrcf	223,w,c
  1157   00101E  32E8               	rrcf	wreg,f,c
  1158   001020  32E8               	rrcf	wreg,f,c
  1159   001022  0B07               	andlw	7
  1160   001024  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1161   001026  0E07               	movlw	7
  1162   001028  6424               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1163   00102A  EF19  F008         	goto	u561
  1164   00102E  EF1B  F008         	goto	u560
  1165   001032                     u561:
  1166   001032  EF72  F008         	goto	l1319
  1167   001036                     u560:
  1168   001036                     l1311:
  1169                           
  1170                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (Std_ReturnType)0x00;
  1171   001036  0E00               	movlw	0
  1172   001038  6E29               	movwf	gpio_pin_direction_intialize@ret^0,c
  1173                           
  1174                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  1175   00103A  EF88  F008         	goto	l1321
  1176   00103E                     l1313:
  1177                           
  1178                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  1179   00103E  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1180   001040  6ED9               	movwf	fsr2l,c
  1181   001042  6ADA               	clrf	fsr2h,c
  1182   001044  30DF               	rrcf	223,w,c
  1183   001046  32E8               	rrcf	wreg,f,c
  1184   001048  32E8               	rrcf	wreg,f,c
  1185   00104A  0B07               	andlw	7
  1186   00104C  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1187   00104E  0E01               	movlw	1
  1188   001050  6E25               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1189   001052  2A24               	incf	??_gpio_pin_direction_intialize^0,f,c
  1190   001054  EF2E  F008         	goto	u574
  1191   001058                     u575:
  1192   001058  90D8               	bcf	status,0,c
  1193   00105A  3625               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1194   00105C                     u574:
  1195   00105C  2E24               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1196   00105E  EF2C  F008         	goto	u575
  1197   001062  5025               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1198   001064  0AFF               	xorlw	255
  1199   001066  6E26               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1200   001068  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1201   00106A  6ED9               	movwf	fsr2l,c
  1202   00106C  6ADA               	clrf	fsr2h,c
  1203   00106E  50DF               	movf	223,w,c
  1204   001070  0B07               	andlw	7
  1205   001072  0D02               	mullw	2
  1206   001074  50F3               	movf	243,w,c
  1207   001076  0F15               	addlw	low _tris_registers
  1208   001078  6ED9               	movwf	fsr2l,c
  1209   00107A  6ADA               	clrf	fsr2h,c
  1210   00107C  CFDE F027          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1211   001080  CFDD F028          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1212   001084  C027  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1213   001088  C028  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1214   00108C  5026               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1215   00108E  16DF               	andwf	indf2,f,c
  1216                           
  1217                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  1218   001090  EF88  F008         	goto	l1321
  1219   001094                     l1315:
  1220                           
  1221                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  1222   001094  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1223   001096  6ED9               	movwf	fsr2l,c
  1224   001098  6ADA               	clrf	fsr2h,c
  1225   00109A  30DF               	rrcf	223,w,c
  1226   00109C  32E8               	rrcf	wreg,f,c
  1227   00109E  32E8               	rrcf	wreg,f,c
  1228   0010A0  0B07               	andlw	7
  1229   0010A2  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1230   0010A4  0E01               	movlw	1
  1231   0010A6  6E25               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1232   0010A8  2A24               	incf	??_gpio_pin_direction_intialize^0,f,c
  1233   0010AA  EF59  F008         	goto	u584
  1234   0010AE                     u585:
  1235   0010AE  90D8               	bcf	status,0,c
  1236   0010B0  3625               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1237   0010B2                     u584:
  1238   0010B2  2E24               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1239   0010B4  EF57  F008         	goto	u585
  1240   0010B8  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1241   0010BA  6ED9               	movwf	fsr2l,c
  1242   0010BC  6ADA               	clrf	fsr2h,c
  1243   0010BE  50DF               	movf	223,w,c
  1244   0010C0  0B07               	andlw	7
  1245   0010C2  0D02               	mullw	2
  1246   0010C4  50F3               	movf	243,w,c
  1247   0010C6  0F15               	addlw	low _tris_registers
  1248   0010C8  6ED9               	movwf	fsr2l,c
  1249   0010CA  6ADA               	clrf	fsr2h,c
  1250   0010CC  CFDE F026          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1251   0010D0  CFDD F027          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1252   0010D4  C026  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1253   0010D8  C027  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1254   0010DC  5025               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1255   0010DE  12DF               	iorwf	indf2,f,c
  1256                           
  1257                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  1258   0010E0  EF88  F008         	goto	l1321
  1259   0010E4                     l1319:
  1260   0010E4  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1261   0010E6  6ED9               	movwf	fsr2l,c
  1262   0010E8  6ADA               	clrf	fsr2h,c
  1263   0010EA  BCDF               	btfsc	indf2,6,c
  1264   0010EC  EF7A  F008         	goto	u591
  1265   0010F0  EF7D  F008         	goto	u590
  1266   0010F4                     u591:
  1267   0010F4  0E01               	movlw	1
  1268   0010F6  EF7E  F008         	goto	u596
  1269   0010FA                     u590:
  1270   0010FA  0E00               	movlw	0
  1271   0010FC                     u596:
  1272                           
  1273                           ; Switch size 1, requested type "simple"
  1274                           ; Number of cases is 2, Range of values is 0 to 1
  1275                           ; switch strategies available:
  1276                           ; Name         Instructions Cycles
  1277                           ; simple_byte            7     4 (average)
  1278                           ;	Chosen strategy is simple_byte
  1279   0010FC  0A00               	xorlw	0	; case 0
  1280   0010FE  B4D8               	btfsc	status,2,c
  1281   001100  EF1F  F008         	goto	l1313
  1282   001104  0A01               	xorlw	1	; case 1
  1283   001106  B4D8               	btfsc	status,2,c
  1284   001108  EF4A  F008         	goto	l1315
  1285   00110C  EF1B  F008         	goto	l1311
  1286   001110                     l1321:
  1287                           
  1288                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     return ret;
  1289   001110  5029               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1290   001112  0012               	return		;funcret
  1291   001114                     __end_of_gpio_pin_direction_intialize:
  1292                           	callstack 0
  1293                           
  1294                           	psect	smallconst
  1295   001000                     __psmallconst:
  1296                           	callstack 0
  1297   001000  00                 	db	0
  1298   001001  00                 	db	0	; dummy byte at the end
  1299   000000                     
  1300                           	psect	rparam
  1301   000000                     
  1302                           	psect	config
  1303                           
  1304                           ; Padding undefined space
  1305   300000                     	org	3145728
  1306   300000  FF                 	db	255
  1307                           
  1308                           ;Config register CONFIG1H @ 0x300001
  1309                           ;	Oscillator Selection bits
  1310                           ;	OSC = HS, HS oscillator
  1311                           ;	Fail-Safe Clock Monitor Enable bit
  1312                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1313                           ;	Internal/External Oscillator Switchover bit
  1314                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1315   300001                     	org	3145729
  1316   300001  02                 	db	2
  1317                           
  1318                           ;Config register CONFIG2L @ 0x300002
  1319                           ;	Power-up Timer Enable bit
  1320                           ;	PWRT = OFF, PWRT disabled
  1321                           ;	Brown-out Reset Enable bits
  1322                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1323                           ;	Brown Out Reset Voltage bits
  1324                           ;	BORV = 3, Minimum setting
  1325   300002                     	org	3145730
  1326   300002  1F                 	db	31
  1327                           
  1328                           ;Config register CONFIG2H @ 0x300003
  1329                           ;	Watchdog Timer Enable bit
  1330                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1331                           ;	Watchdog Timer Postscale Select bits
  1332                           ;	WDTPS = 32768, 1:32768
  1333   300003                     	org	3145731
  1334   300003  1E                 	db	30
  1335                           
  1336                           ; Padding undefined space
  1337   300004                     	org	3145732
  1338   300004  FF                 	db	255
  1339                           
  1340                           ;Config register CONFIG3H @ 0x300005
  1341                           ;	CCP2 MUX bit
  1342                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1343                           ;	PORTB A/D Enable bit
  1344                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1345                           ;	Low-Power Timer1 Oscillator Enable bit
  1346                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1347                           ;	MCLR Pin Enable bit
  1348                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1349   300005                     	org	3145733
  1350   300005  81                 	db	129
  1351                           
  1352                           ;Config register CONFIG4L @ 0x300006
  1353                           ;	Stack Full/Underflow Reset Enable bit
  1354                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1355                           ;	Single-Supply ICSP Enable bit
  1356                           ;	LVP = OFF, Single-Supply ICSP disabled
  1357                           ;	Extended Instruction Set Enable bit
  1358                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1359                           ;	Background Debugger Enable bit
  1360                           ;	DEBUG = 0x1, unprogrammed default
  1361   300006                     	org	3145734
  1362   300006  81                 	db	129
  1363                           
  1364                           ; Padding undefined space
  1365   300007                     	org	3145735
  1366   300007  FF                 	db	255
  1367                           
  1368                           ;Config register CONFIG5L @ 0x300008
  1369                           ;	Code Protection bit
  1370                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1371                           ;	Code Protection bit
  1372                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1373                           ;	Code Protection bit
  1374                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1375                           ;	Code Protection bit
  1376                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1377   300008                     	org	3145736
  1378   300008  0F                 	db	15
  1379                           
  1380                           ;Config register CONFIG5H @ 0x300009
  1381                           ;	Boot Block Code Protection bit
  1382                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1383                           ;	Data EEPROM Code Protection bit
  1384                           ;	CPD = OFF, Data EEPROM not code-protected
  1385   300009                     	org	3145737
  1386   300009  C0                 	db	192
  1387                           
  1388                           ;Config register CONFIG6L @ 0x30000A
  1389                           ;	Write Protection bit
  1390                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1391                           ;	Write Protection bit
  1392                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1393                           ;	Write Protection bit
  1394                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1395                           ;	Write Protection bit
  1396                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1397   30000A                     	org	3145738
  1398   30000A  0F                 	db	15
  1399                           
  1400                           ;Config register CONFIG6H @ 0x30000B
  1401                           ;	Configuration Register Write Protection bit
  1402                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1403                           ;	Boot Block Write Protection bit
  1404                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1405                           ;	Data EEPROM Write Protection bit
  1406                           ;	WRTD = OFF, Data EEPROM not write-protected
  1407   30000B                     	org	3145739
  1408   30000B  E0                 	db	224
  1409                           
  1410                           ;Config register CONFIG7L @ 0x30000C
  1411                           ;	Table Read Protection bit
  1412                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1413                           ;	Table Read Protection bit
  1414                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1415                           ;	Table Read Protection bit
  1416                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1417                           ;	Table Read Protection bit
  1418                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1419   30000C                     	org	3145740
  1420   30000C  0F                 	db	15
  1421                           
  1422                           ;Config register CONFIG7H @ 0x30000D
  1423                           ;	Boot Block Table Read Protection bit
  1424                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1425   30000D                     	org	3145741
  1426   30000D  40                 	db	64
  1427                           tosu	equ	0xFFF
  1428                           tosh	equ	0xFFE
  1429                           tosl	equ	0xFFD
  1430                           stkptr	equ	0xFFC
  1431                           pclatu	equ	0xFFB
  1432                           pclath	equ	0xFFA
  1433                           pcl	equ	0xFF9
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           prodh	equ	0xFF4
  1439                           prodl	equ	0xFF3
  1440                           indf0	equ	0xFEF
  1441                           postinc0	equ	0xFEE
  1442                           postdec0	equ	0xFED
  1443                           preinc0	equ	0xFEC
  1444                           plusw0	equ	0xFEB
  1445                           fsr0h	equ	0xFEA
  1446                           fsr0l	equ	0xFE9
  1447                           wreg	equ	0xFE8
  1448                           indf1	equ	0xFE7
  1449                           postinc1	equ	0xFE6
  1450                           postdec1	equ	0xFE5
  1451                           preinc1	equ	0xFE4
  1452                           plusw1	equ	0xFE3
  1453                           fsr1h	equ	0xFE2
  1454                           fsr1l	equ	0xFE1
  1455                           bsr	equ	0xFE0
  1456                           indf2	equ	0xFDF
  1457                           postinc2	equ	0xFDE
  1458                           postdec2	equ	0xFDD
  1459                           preinc2	equ	0xFDC
  1460                           plusw2	equ	0xFDB
  1461                           fsr2h	equ	0xFDA
  1462                           fsr2l	equ	0xFD9
  1463                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     15      56
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_initialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_trun_off@pin_obj(COMRAM[1]), relay_trun_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _dc_motor_move_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _application_intialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9599
                                             13 COMRAM     2     2      0
              _application_intialize
                 _dc_motor_move_left
                _dc_motor_move_right
                 _dc_motor_move_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_stop                                   2     1      1    2245
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    2245
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   2     1      1    2245
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0    2851
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  2     1      1    2848
                                             11 COMRAM     2     1      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    2606
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1851
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _dc_motor_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_move_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      F      38       1       44.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38      39        0.0%
DATA                 0      0      38       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jul 31 15:27:30 2025

                                    l131 1112                                      l150 1222  
                                    l223 14B8                                      l232 1484  
                                    l242 141E                                      l171 1376  
                                    l237 13E6                                      l247 13AE  
                                    u600 1128                                      u601 1124  
                                    u610 1148                                      u611 1144  
                                    u550 1016                                      u551 1012  
                                    u560 1036                                      u624 116E  
                                    u640 1330                                      u561 1032  
                                    u625 116A                                      u641 132C  
                                    u634 11C4                                      u650 1350  
                                    u635 11C0                                      u651 134C  
                                    u660 146A                                      u661 1466  
                                    u590 10FA                                      u574 105C  
                                    u670 13C4                                      u591 10F4  
                                    u575 1058                                      u671 13C0  
                                    u584 10B2                                      u680 13FC  
                                    u585 10AE                                      u681 13F8  
                                    u690 138C                                      u691 1388  
                                    u596 10FC                                      u837 1242  
                                    u847 126A                                      u857 1292  
                                    u867 12BA                                      u877 12E2  
                                    u887 130A                      led_initialize@F2894 0038  
                                    wreg 0FE8                    relay_initialize@F2888 0034  
                                   l1311 1036                                     l1313 103E  
                                   l1321 1110                                     l1315 1094  
                                   l1307 1002                                     l1331 1150  
                                   l1309 1016                                     l1333 11A6  
                                   l1325 1114                                     l1319 10E4  
                                   l1327 1128                                     l1351 1350  
                                   l1511 1224                                     l1337 11F6  
                                   l1329 1148                                     l1353 1354  
                                   l1361 1472                                     l1521 1258  
                                   l1513 1228                                     l1339 1220  
                                   l1347 1320                                     l1363 1482  
                                   l1371 14B0                                     l1531 12A0  
                                   l1523 1260                                     l1515 1230  
                                   l1349 1330                                     l1357 1456  
                                   l1373 13B0                                     l1541 12D8  
                                   l1533 12A8                                     l1525 1278  
                                   l1517 1238                                     l1509 1224  
                                   l1359 146A                                     l1367 14A8  
                                   l1383 13E8                                     l1375 13C4  
                                   l1543 12F0                                     l1535 12B0  
                                   l1527 1280                                     l1519 1250  
                                   l1553 120A                                     l1369 14A8  
                                   l1385 13FC                                     l1377 13CC  
                                   l1393 1378                                     l1545 12F8  
                                   l1537 12C8                                     l1529 1288  
                                   l1387 1404                                     l1379 13E4  
                                   l1395 138C                                     l1547 1300  
                                   l1539 12D0                                     l1389 141C  
                                   l1397 1394                                     l1399 13AC  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                  ??_application_intialize 0030  
                                   _main 1224                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000                             ___param_bank 0000  
                 dc_motor_initialize@ret 002F                     _gpio_pin_write_logic 1114  
                                  ?_main 0023                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    tablat 0FF5  
                                  status 0FD8                          __initialization 1420  
                           __end_of_main 1320                    ?_gpio_pin_write_logic 0023  
                          _lat_registers 000B              __end_of_dc_motor_initialize 1486  
                                 ??_main 0030                            __activetblptr 0002  
                       led_turn_on@F2899 0037              __end_of_dc_motor_move_right 13E8  
                                 clear_0 1446                                   isa$std 0001  
gpio_pin_direction_intialize@_pin_config 0023                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 144C  
                          ___rparam_used 0001              dc_motor_move_left@_dc_motor 002B  
                 ??_gpio_pin_write_logic 0025                           __pcstackCOMRAM 0023  
                             _dc_motor_1 0021                               _dc_motor_2 001F  
          __end_of_application_intialize 14BA                        led_turn_off@F2904 0036  
                   led_turn_toggle@F2909 0035                           _tris_registers 0015  
                                __Hparam 0000                                  __Lparam 0000  
                  dc_motor_move_left@ret 002C                             __psmallconst 1000  
             __end_of_gpio_pin_intialize 1378                                  __pcinit 1420  
                                __ramtop 1000                                  __ptext0 1224  
                                __ptext1 1378                                  __ptext2 13B0  
                                __ptext3 13E8                                  __ptext4 14A8  
                                __ptext5 1456                                  __ptext6 1320  
                                __ptext7 1114                                  __ptext8 1002  
                  dc_motor_move_stop@ret 002C                     end_of_initialization 144C  
                          __Lmediumconst 0000              dc_motor_move_stop@_dc_motor 002B  
                  gpio_pin_intialize@ret 002D                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                       relay_trun_on@F2893 0033  
          gpio_pin_intialize@_pin_config 002B     __end_of_gpio_pin_direction_intialize 1114  
           _gpio_pin_direction_intialize 1002                            __pidataCOMRAM 1486  
                    start_initialization 1420            ?_gpio_pin_direction_intialize 0023  
             __end_of_dc_motor_move_left 1420               __end_of_dc_motor_move_stop 13B0  
                            __pbssCOMRAM 0032          gpio_pin_direction_intialize@ret 0029  
                  _application_intialize 14A8          gpio_pin_write_logic@_pin_config 0023  
              gpio_pin_write_logic@logic 0024                              __smallconst 1000  
                     _gpio_pin_intialize 1320           ??_gpio_pin_direction_intialize 0024  
                    ?_gpio_pin_intialize 002B                      _dc_motor_initialize 1456  
           dc_motor_initialize@_dc_motor 002E                     ??_gpio_pin_intialize 002C  
                   ?_dc_motor_initialize 002E                  gpio_pin_write_logic@ret 002A  
                              copy_data0 1434                      _dc_motor_move_right 13B0  
                 ?_application_intialize 0023                                 __Hrparam 0000  
                               __Lrparam 0000                     ?_dc_motor_move_right 002B  
                  ??_dc_motor_initialize 002F                   dc_motor_move_right@ret 002C  
                               isa$xinst 0000                    ??_dc_motor_move_right 002C  
                     _dc_motor_move_left 13E8                       _dc_motor_move_stop 1378  
           __end_of_gpio_pin_write_logic 1224                      ?_dc_motor_move_left 002B  
                    ?_dc_motor_move_stop 002B                     ??_dc_motor_move_left 002C  
                   ??_dc_motor_move_stop 002C             dc_motor_move_right@_dc_motor 002B  
                         _port_registers 0001                      relay_trun_off@F2898 0032  
